<?xml version="1.0" encoding="UTF-8"?>

<!-- 2025 -->
<!-- By Pedro henrique garcia. -->
<!-- Github/gitlab: Phkaiser13 -->

<!--
    Este FXML define a tela principal do jogo, o tabuleiro.
    Ele é composto por um indicador de status, a grade do jogo e botões de controle.
-->

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.RowConstraints?>
<?import javafx.scene.layout.VBox?>

<!--
    O VBox raiz, como nas outras telas, com a ligação para o seu Controller.
    fx:controller="com.pedrohenrique.tictactoe.ui.controller.GameBoardController"
    Reutilizamos os mesmos estilos para manter a consistência visual.
-->
<VBox xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.pedrohenrique.tictactoe.ui.controller.GameBoardController"
      alignment="CENTER"
      spacing="20"
      styleClass="root-pane"
      stylesheets="@../css/base.css, @../css/dark_theme.css">

    <padding>
        <Insets top="20" right="20" bottom="20" left="20"/>
    </padding>

    <!--
        Label para exibir o status do jogo (ex: "Vez do Jogador X", "Jogador O Venceu!").
        fx:id="statusLabel" permite que o Controller atualize este texto dinamicamente.
        Reutilizamos a classe 'title' para um visual de destaque.
    -->
    <Label fx:id="statusLabel" text="Carregando..." styleClass="title"/>

    <!--
        GridPane é o contêiner perfeito para o nosso tabuleiro 3x3.
        fx:id="gameGrid" é o identificador para que o Controller possa acessar a grade.
        - alignment="CENTER": Centraliza a grade no espaço disponível.
        - hgap/vgap: Define o espaçamento horizontal e vertical entre as células da grade.
    -->
    <GridPane fx:id="gameGrid" alignment="CENTER" hgap="10" vgap="10">
        <!--
            Definimos as restrições para as 3 colunas.
            Isso garante que todas as colunas tenham o mesmo tamanho e se comportem da mesma forma.
        -->
        <columnConstraints>
            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
        </columnConstraints>
        <!--
            Definimos as restrições para as 3 linhas.
            Isso garante que todas as linhas tenham o mesmo tamanho.
        -->
        <rowConstraints>
            <RowConstraints minHeight="10.0" prefHeight="100.0" vgrow="SOMETIMES"/>
            <RowConstraints minHeight="10.0" prefHeight="100.0" vgrow="SOMETIMES"/>
            <RowConstraints minHeight="10.0" prefHeight="100.0" vgrow="SOMETIMES"/>
        </rowConstraints>
    </GridPane>

    <!--
        Um HBox para os botões de controle na parte inferior.
    -->
    <HBox alignment="CENTER" spacing="20">
        <!--
            Botão para reiniciar a partida com as mesmas configurações.
            onAction="#handleRestartAction" chama o método correspondente no Controller.
        -->
        <Button text="Reiniciar" onAction="#handleRestartAction" styleClass="menu-button"/>
        <!--
            Botão para voltar ao menu principal.
            onAction="#handleBackToMenuAction" chama o método correspondente no Controller.
        -->
        <Button text="Menu Principal" onAction="#handleBackToMenuAction" styleClass="menu-button"/>
    </HBox>

</VBox>